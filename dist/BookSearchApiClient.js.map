{"version":3,"file":"BookSearchApiClient.js","sourceRoot":"/src/","sources":["BookSearchApiClient.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,gBAAgB,CAAA;AAU/C,MAAM,mBAAmB;IAGvB,YAAY,MAAsB;QAIlC,qBAAgB,GAAG,CAAC,UAAkB,EAAE,KAAa,EAAmB,EAAE;YAExE,OAAO,IAAI,OAAO,CAAE,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;gBACtC,IAAI,MAAM,GAAG,EAAE,CAAC;gBAEhB,8BAA8B;gBAC9B,IAAI,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;gBAC/B,GAAG,CAAC,IAAI,CACN,KAAK,EACL,iDAAiD;oBAC/C,UAAU;oBACV,SAAS;oBACT,KAAK;oBACL,UAAU;oBACV,IAAI,CAAC,MAAM,CACd,CAAC;gBAEF,4CAA4C;gBAC5C,GAAG,CAAC,MAAM,GAAG;oBACX,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,EAAE,CAAC;wBACtB,IAAI,IAAI,CAAC,MAAM,IAAI,MAAM,EAAE,CAAC;4BAC1B,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;4BAE1C,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,IAAI;gCAC9B,OAAO;oCACL,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK;oCACtB,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM;oCACxB,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI;oCACpB,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ;oCAC7B,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;iCACxB,CAAC;4BACJ,CAAC,CAAC,CAAC;wBACL,CAAC;6BAAM,IAAI,IAAI,CAAC,MAAM,IAAI,KAAK,EAAE,CAAC;4BAChC,MAAM,GAAG,GAAG,GAAG,CAAC,WAAW,CAAC;4BAE5B,MAAM,GAAG,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,IAAI;gCACxD,OAAO;oCACL,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,SAAS;oCACjD,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,SAAS;oCAClD,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,SAAS;oCAChD,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,SAAS;oCACpD,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,SAAS;iCAClD,CAAC;4BACJ,CAAC,CAAC,CAAC;wBACL,CAAC;wBAED,OAAO,OAAO,CAAC,MAAM,CAAC,CAAA;oBACxB,CAAC;yBAAM,CAAC;wBACN,OAAO,MAAM,CAAC,qCAAqC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAA;oBACnE,CAAC;gBACH,CAAC,CAAC;gBAEF,6BAA6B;gBAE7B,mBAAmB;gBACnB,GAAG,CAAC,IAAI,EAAE,CAAC;YACb,CAAC,CAAC,CAAA;QAGJ,CAAC,CAAC;QA9DA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;CA8DF;AAED,eAAe,mBAAmB,CAAA","sourcesContent":["import { XMLHttpRequest } from \"xmlhttprequest\"\n\ntype Book = {\n  title: string,\n  author: string,\n  isbn: string,\n  quantity: string,\n  price: string,\n}\n\nclass BookSearchApiClient {\n  private format: \"json\" | \"xml\"\n\n  constructor(format: \"json\" | \"xml\") {\n    this.format = format;\n  }\n\n  getBooksByAuthor = (authorName: string, limit: number): Promise<Book[]> => {\n\n    return new Promise( (resolve, reject) => {\n      let result = [];\n  \n      // Create a new request object\n      let xhr = new XMLHttpRequest();\n      xhr.open(\n        \"GET\",\n        \"http://api.book-seller-example.com/by-author?q=\" +\n          authorName +\n          \"&limit=\" +\n          limit +\n          \"&format=\" +\n          this.format\n      );\n\n      // `on load` of the request do the following\n      xhr.onload = function () {\n        if (xhr.status == 200) {\n          if (this.format == \"json\") {\n            const json = JSON.parse(xhr.responseText);\n    \n            result = json.map(function (item) {\n              return {\n                title: item.book.title,\n                author: item.book.author,\n                isbn: item.book.isbn,\n                quantity: item.stock.quantity,\n                price: item.stock.price,\n              };\n            });\n          } else if (this.format == \"xml\") {\n            const xml = xhr.responseXML;\n    \n            result = xml.documentElement.childNodes.map(function (item) {\n              return {\n                title: item.childNodes[0].childNodes[0].nodeValue,\n                author: item.childNodes[0].childNodes[1].nodeValue,\n                isbn: item.childNodes[0].childNodes[2].nodeValue,\n                quantity: item.childNodes[1].childNodes[0].nodeValue,\n                price: item.childNodes[1].childNodes[1].nodeValue,\n              };\n            });\n          }\n    \n          return resolve(result)\n        } else {\n          return reject(\"Request failed. Returned status of \" + xhr.status)\n        }\n      };\n\n      // TODO: handle request error\n    \n      // Send the request\n      xhr.send();\n    })\n\n  \n  };\n}\n\nexport default BookSearchApiClient\n"]}